// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tech.proto
// Protobuf C++ Version: 5.26.1

#include "tech.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kpex {
namespace tech {

inline constexpr LayerInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gds_layer_{0u},
        gds_datatype_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LayerInfo::LayerInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LayerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LayerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LayerInfoDefaultTypeInternal() {}
  union {
    LayerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LayerInfoDefaultTypeInternal _LayerInfo_default_instance_;

inline constexpr Technology::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        layers_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        process_stack_{nullptr},
        extraction_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Technology::Technology(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TechnologyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TechnologyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TechnologyDefaultTypeInternal() {}
  union {
    Technology _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TechnologyDefaultTypeInternal _Technology_default_instance_;
}  // namespace tech
}  // namespace kpex
static ::_pb::Metadata file_level_metadata_tech_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tech_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tech_2eproto = nullptr;
const ::uint32_t
    TableStruct_tech_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::kpex::tech::Technology, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kpex::tech::Technology, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kpex::tech::Technology, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kpex::tech::Technology, _impl_.layers_),
        PROTOBUF_FIELD_OFFSET(::kpex::tech::Technology, _impl_.process_stack_),
        PROTOBUF_FIELD_OFFSET(::kpex::tech::Technology, _impl_.extraction_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kpex::tech::LayerInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kpex::tech::LayerInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kpex::tech::LayerInfo, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::kpex::tech::LayerInfo, _impl_.gds_layer_),
        PROTOBUF_FIELD_OFFSET(::kpex::tech::LayerInfo, _impl_.gds_datatype_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::kpex::tech::Technology)},
        {16, -1, -1, sizeof(::kpex::tech::LayerInfo)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kpex::tech::_Technology_default_instance_._instance,
    &::kpex::tech::_LayerInfo_default_instance_._instance,
};
const char descriptor_table_protodef_tech_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ntech.proto\022\tkpex.tech\032\rextract.proto\032\023"
    "process_stack.proto\"\245\001\n\nTechnology\022\014\n\004na"
    "me\030\001 \001(\t\022$\n\006layers\030e \003(\0132\024.kpex.tech.Lay"
    "erInfo\0223\n\rprocess_stack\030\214\001 \001(\0132\033.kpex.te"
    "ch.ProcessStackInfo\022.\n\nextraction\030\310\001 \001(\013"
    "2\031.kpex.tech.ExtractionInfo\"W\n\tLayerInfo"
    "\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\013 \001(\t\022\021\n\tg"
    "ds_layer\030\025 \001(\r\022\024\n\014gds_datatype\030\037 \001(\rb\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tech_2eproto_deps[2] =
    {
        &::descriptor_table_extract_2eproto,
        &::descriptor_table_process_5fstack_2eproto,
};
static ::absl::once_flag descriptor_table_tech_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tech_2eproto = {
    false,
    false,
    324,
    descriptor_table_protodef_tech_2eproto,
    "tech.proto",
    &descriptor_table_tech_2eproto_once,
    descriptor_table_tech_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_tech_2eproto::offsets,
    file_level_metadata_tech_2eproto,
    file_level_enum_descriptors_tech_2eproto,
    file_level_service_descriptors_tech_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tech_2eproto_getter() {
  return &descriptor_table_tech_2eproto;
}
namespace kpex {
namespace tech {
// ===================================================================

class Technology::_Internal {
 public:
  using HasBits = decltype(std::declval<Technology>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Technology, _impl_._has_bits_);
};

void Technology::clear_process_stack() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.process_stack_ != nullptr) _impl_.process_stack_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Technology::clear_extraction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.extraction_ != nullptr) _impl_.extraction_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Technology::Technology(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kpex.tech.Technology)
}
inline PROTOBUF_NDEBUG_INLINE Technology::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        layers_{visibility, arena, from.layers_},
        name_(arena, from.name_) {}

Technology::Technology(
    ::google::protobuf::Arena* arena,
    const Technology& from)
    : ::google::protobuf::Message(arena) {
  Technology* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.process_stack_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kpex::tech::ProcessStackInfo>(
                              arena, *from._impl_.process_stack_)
                        : nullptr;
  _impl_.extraction_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kpex::tech::ExtractionInfo>(
                              arena, *from._impl_.extraction_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kpex.tech.Technology)
}
inline PROTOBUF_NDEBUG_INLINE Technology::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        layers_{visibility, arena},
        name_(arena) {}

inline void Technology::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, process_stack_),
           0,
           offsetof(Impl_, extraction_) -
               offsetof(Impl_, process_stack_) +
               sizeof(Impl_::extraction_));
}
Technology::~Technology() {
  // @@protoc_insertion_point(destructor:kpex.tech.Technology)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Technology::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  delete _impl_.process_stack_;
  delete _impl_.extraction_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Technology::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Technology, _impl_._cached_size_),
              false,
          },
          &Technology::MergeImpl,
          &Technology::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Technology::Clear() {
// @@protoc_insertion_point(message_clear_start:kpex.tech.Technology)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.layers_.Clear();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.process_stack_ != nullptr);
      _impl_.process_stack_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.extraction_ != nullptr);
      _impl_.extraction_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Technology::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 3, 33, 19> Technology::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Technology, _impl_._has_bits_),
    0, // no _extensions_
    200, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Technology_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kpex::tech::Technology>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kpex.tech.ExtractionInfo extraction = 200;
    {::_pbi::TcParser::FastMtS2,
     {3266, 1, 2, PROTOBUF_FIELD_OFFSET(Technology, _impl_.extraction_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Technology, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .kpex.tech.ProcessStackInfo process_stack = 140;
    {::_pbi::TcParser::FastMtS2,
     {2274, 0, 1, PROTOBUF_FIELD_OFFSET(Technology, _impl_.process_stack_)}},
    // repeated .kpex.tech.LayerInfo layers = 101;
    {::_pbi::TcParser::FastMtR2,
     {1706, 63, 0, PROTOBUF_FIELD_OFFSET(Technology, _impl_.layers_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    101, 0, 7,
    65534, 1, 65535, 2, 65407, 2, 65535, 3, 65535, 3, 65535, 3,
    65527, 3,
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Technology, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .kpex.tech.LayerInfo layers = 101;
    {PROTOBUF_FIELD_OFFSET(Technology, _impl_.layers_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kpex.tech.ProcessStackInfo process_stack = 140;
    {PROTOBUF_FIELD_OFFSET(Technology, _impl_.process_stack_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kpex.tech.ExtractionInfo extraction = 200;
    {PROTOBUF_FIELD_OFFSET(Technology, _impl_.extraction_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kpex::tech::LayerInfo>()},
    {::_pbi::TcParser::GetTable<::kpex::tech::ProcessStackInfo>()},
    {::_pbi::TcParser::GetTable<::kpex::tech::ExtractionInfo>()},
  }}, {{
    "\24\4\0\0\0\0\0\0"
    "kpex.tech.Technology"
    "name"
  }},
};

::uint8_t* Technology::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kpex.tech.Technology)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kpex.tech.Technology.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .kpex.tech.LayerInfo layers = 101;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_layers_size());
       i < n; i++) {
    const auto& repfield = this->_internal_layers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            101, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .kpex.tech.ProcessStackInfo process_stack = 140;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        140, *_impl_.process_stack_, _impl_.process_stack_->GetCachedSize(), target, stream);
  }

  // .kpex.tech.ExtractionInfo extraction = 200;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        200, *_impl_.extraction_, _impl_.extraction_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kpex.tech.Technology)
  return target;
}

::size_t Technology::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kpex.tech.Technology)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kpex.tech.LayerInfo layers = 101;
  total_size += 2UL * this->_internal_layers_size();
  for (const auto& msg : this->_internal_layers()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .kpex.tech.ProcessStackInfo process_stack = 140;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.process_stack_);
    }

    // .kpex.tech.ExtractionInfo extraction = 200;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.extraction_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Technology::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Technology*>(&to_msg);
  auto& from = static_cast<const Technology&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kpex.tech.Technology)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_layers()->MergeFrom(
      from._internal_layers());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.process_stack_ != nullptr);
      if (_this->_impl_.process_stack_ == nullptr) {
        _this->_impl_.process_stack_ =
            ::google::protobuf::Message::CopyConstruct<::kpex::tech::ProcessStackInfo>(arena, *from._impl_.process_stack_);
      } else {
        _this->_impl_.process_stack_->MergeFrom(*from._impl_.process_stack_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.extraction_ != nullptr);
      if (_this->_impl_.extraction_ == nullptr) {
        _this->_impl_.extraction_ =
            ::google::protobuf::Message::CopyConstruct<::kpex::tech::ExtractionInfo>(arena, *from._impl_.extraction_);
      } else {
        _this->_impl_.extraction_->MergeFrom(*from._impl_.extraction_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Technology::CopyFrom(const Technology& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kpex.tech.Technology)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Technology::IsInitialized() const {
  return true;
}

void Technology::InternalSwap(Technology* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.layers_.InternalSwap(&other->_impl_.layers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Technology, _impl_.extraction_)
      + sizeof(Technology::_impl_.extraction_)
      - PROTOBUF_FIELD_OFFSET(Technology, _impl_.process_stack_)>(
          reinterpret_cast<char*>(&_impl_.process_stack_),
          reinterpret_cast<char*>(&other->_impl_.process_stack_));
}

::google::protobuf::Metadata Technology::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_tech_2eproto_getter,
                                   &descriptor_table_tech_2eproto_once,
                                   file_level_metadata_tech_2eproto[0]);
}
// ===================================================================

class LayerInfo::_Internal {
 public:
};

LayerInfo::LayerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kpex.tech.LayerInfo)
}
inline PROTOBUF_NDEBUG_INLINE LayerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        description_(arena, from.description_),
        _cached_size_{0} {}

LayerInfo::LayerInfo(
    ::google::protobuf::Arena* arena,
    const LayerInfo& from)
    : ::google::protobuf::Message(arena) {
  LayerInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gds_layer_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gds_layer_),
           offsetof(Impl_, gds_datatype_) -
               offsetof(Impl_, gds_layer_) +
               sizeof(Impl_::gds_datatype_));

  // @@protoc_insertion_point(copy_constructor:kpex.tech.LayerInfo)
}
inline PROTOBUF_NDEBUG_INLINE LayerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void LayerInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gds_layer_),
           0,
           offsetof(Impl_, gds_datatype_) -
               offsetof(Impl_, gds_layer_) +
               sizeof(Impl_::gds_datatype_));
}
LayerInfo::~LayerInfo() {
  // @@protoc_insertion_point(destructor:kpex.tech.LayerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LayerInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
LayerInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_._cached_size_),
              false,
          },
          &LayerInfo::MergeImpl,
          &LayerInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void LayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kpex.tech.LayerInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.gds_layer_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gds_datatype_) -
      reinterpret_cast<char*>(&_impl_.gds_layer_)) + sizeof(_impl_.gds_datatype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LayerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 0, 43, 2> LayerInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    31, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3220175870,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LayerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kpex::tech::LayerInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string description = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 gds_layer = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_.gds_layer_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 gds_datatype = 31;
    {::_pbi::TcParser::FastV32S2,
     {504, 63, 0, PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_.gds_datatype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 11;
    {PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 gds_layer = 21;
    {PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_.gds_layer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 gds_datatype = 31;
    {PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_.gds_datatype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\23\4\13\0\0\0\0\0"
    "kpex.tech.LayerInfo"
    "name"
    "description"
  }},
};

::uint8_t* LayerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kpex.tech.LayerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kpex.tech.LayerInfo.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string description = 11;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kpex.tech.LayerInfo.description");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // uint32 gds_layer = 21;
  if (this->_internal_gds_layer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        21, this->_internal_gds_layer(), target);
  }

  // uint32 gds_datatype = 31;
  if (this->_internal_gds_datatype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        31, this->_internal_gds_datatype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kpex.tech.LayerInfo)
  return target;
}

::size_t LayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kpex.tech.LayerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string description = 11;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // uint32 gds_layer = 21;
  if (this->_internal_gds_layer() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_gds_layer());
  }

  // uint32 gds_datatype = 31;
  if (this->_internal_gds_datatype() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                    this->_internal_gds_datatype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void LayerInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LayerInfo*>(&to_msg);
  auto& from = static_cast<const LayerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kpex.tech.LayerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_gds_layer() != 0) {
    _this->_impl_.gds_layer_ = from._impl_.gds_layer_;
  }
  if (from._internal_gds_datatype() != 0) {
    _this->_impl_.gds_datatype_ = from._impl_.gds_datatype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LayerInfo::CopyFrom(const LayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kpex.tech.LayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LayerInfo::IsInitialized() const {
  return true;
}

void LayerInfo::InternalSwap(LayerInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_.gds_datatype_)
      + sizeof(LayerInfo::_impl_.gds_datatype_)
      - PROTOBUF_FIELD_OFFSET(LayerInfo, _impl_.gds_layer_)>(
          reinterpret_cast<char*>(&_impl_.gds_layer_),
          reinterpret_cast<char*>(&other->_impl_.gds_layer_));
}

::google::protobuf::Metadata LayerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_tech_2eproto_getter,
                                   &descriptor_table_tech_2eproto_once,
                                   file_level_metadata_tech_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tech
}  // namespace kpex
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_tech_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
