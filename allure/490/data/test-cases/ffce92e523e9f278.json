{"uid":"ffce92e523e9f278","name":"test_via_stack_1x1_minsize_poly_to_met5","fullName":"tests.rcx25.rcx25_R_sky130A_test#test_via_stack_1x1_minsize_poly_to_met5","historyId":"0f6cd4daacb8cbf3f5ca79fd09b21c51","time":{"start":1761829296605,"stop":1761829299461,"duration":2856},"status":"failed","statusMessage":"AssertionError: Diff detected","statusTrace":"@allure.parent_suite(parent_suite)\n    @allure.tag(*tags)\n    @pytest.mark.slow\n    def test_via_stack_1x1_minsize_poly_to_met5():\n        # MAGIC GIVES (8.3 revision 540):\n        #_______________________________ NOTE: with halo=8µm __________________________________\n        # R0 li1.n3 poly 175.37       # poly contact, should be 152Ω\n        # R1 li1.n4 li1.n3 9.3005     # mcon via, should be 9.3Ω\n        # R2 li1.n3 li1 6.4005\n        # R3 li1.n4 li1.n2 4.5005     # via, should be 4.5Ω\n        # R7 met1 li1.n4 0.063\n        # R4 li1.n1 li1.n0 3.4105     # via2, should be 3.41Ω\n        # R8 li1.n2 met2 0.0545541\n        # R6 li1.n0 met5 0.3834       # via4, should be 0.38Ω\n        # R9 li1.n1 met3 0.0232879\n        # R10 li1.n0 met4 0.00687288\n        # R5 li1.n2 li1.n1 3.4105     # via3, should be 3.41Ω\n        # (and some redundant listings of the same)\n>       pex_whiteboxed.assert_expected_matches_obtained(\n            'test_patterns', 'r_via_stack_1x1_minsize_poly_to_met5.gds.gz',\n            expected_csv_content=\"\"\"Device;Net1;Net2;Capacitance [fF];Resistance [Ω]\n    R1;$0.17;$1.18;;152.0\n    R2;$0.17;poly;;0.0\n    R3;$1.18;$2.18;;0.0\n    R4;$1.18;li1;;0.0\n    R5;$10.40;$11.27;;0.38\n    R6;$10.40;$9.40;;0.0\n    R7;$11.27;met5;;0.0\n    R8;$2.18;$3.25;;9.3\n    R9;$3.25;$4.25;;0.0\n    R10;$3.25;met1;;0.0\n    R11;$4.25;$5.26;;4.5\n    R12;$5.26;$6.26;;0.0\n    R13;$5.26;met2;;0.0\n    R14;$6.26;$7.43;;3.41\n    R15;$7.43;$8.43;;0.0\n    R16;$7.43;met3;;0.0\n    R17;$8.43;$9.40;;3.41\n    R18;$9.40;met4;;0.0\"\"\"\n            )\n\ntests/rcx25/rcx25_R_sky130A_test.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = RCX25Extraction(pdk=PDKTestConfig(name=<PDKName.SKY130A: 'sky130A'>), pex_mode=<PEXMode.R: 'R'>, blackbox=False)\nexpected_csv_content = 'Device;Net1;Net2;Capacitance [fF];Resistance [Ω]\\nR1;$0.17;$1.18;;152.0\\nR2;$0.17;poly;;0.0\\nR3;$1.18;$2.18;;0.0\\nR4;...et2;;0.0\\nR14;$6.26;$7.43;;3.41\\nR15;$7.43;$8.43;;0.0\\nR16;$7.43;met3;;0.0\\nR17;$8.43;$9.40;;3.41\\nR18;$9.40;met4;;0.0'\npath_components = ('test_patterns', 'r_via_stack_1x1_minsize_poly_to_met5.gds.gz')\nresult = CellExtractionResults(cell_name='r_via_stack_1x1_minsize_poly_to_met5', overlap_table=defaultdict(<class 'list'>, {}),...3864805715872\n    node_a {\n      node_id: 93864805707440\n    }\n    node_b {\n      node_id: 93864805707888\n    }\n  }\n}\n)\ncsv = '/home/runner/work/klayout-pex/klayout-pex/output_sky130A/r_via_stack_1x1_minsize_poly_to_met5__r_via_stack_1x1_minsize_poly_to_met5/r_via_stack_1x1_minsize_poly_to_met5_k25d_pex_netlist.csv'\n\n    def assert_expected_matches_obtained(self,\n                                         *path_components,\n                                         expected_csv_content: str) -> CellExtractionResults:\n        result, csv, preview_png = self.run_rcx25d_single_cell(*path_components)\n        allure.attach.file(csv, name='pex_obtained.csv', attachment_type=allure.attachment_type.CSV)\n        allure.attach.file(preview_png, name='\uD83D\uDCF8 layout_preview.png', attachment_type=allure.attachment_type.PNG)\n        expected_csv = csv_diff.load_csv(io.StringIO(expected_csv_content), key='Device')\n        with open(csv, 'r') as f:\n            obtained_csv = csv_diff.load_csv(f, key='Device')\n            diff = csv_diff.compare(expected_csv, obtained_csv, show_unchanged=False)\n            human_diff = csv_diff.human_text(\n                diff, current=obtained_csv, extras=(('Net1','{Net1}'),('Net2','{Net2}'))\n            )\n            allure.attach(expected_csv_content, name='pex_expected.csv', attachment_type=allure.attachment_type.CSV)\n            allure.attach(json.dumps(diff, sort_keys=True, indent='    ').encode(\"utf8\"),\n                          name='pex_diff.json', attachment_type=allure.attachment_type.JSON)\n            allure.attach(human_diff.encode(\"utf8\"), name='‼️ pex_diff.txt', attachment_type=allure.attachment_type.TEXT)\n            # assert diff['added'] == []\n            # assert diff['removed'] == []\n            # assert diff['changed'] == []\n            # assert diff['columns_added'] == []\n            # assert diff['columns_removed'] == []\n>           assert human_diff == '', 'Diff detected'\n                   ^^^^^^^^^^^^^^^^\nE           AssertionError: Diff detected\n\ntests/rcx25/rcx25_test_helpers.py:145: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: Diff detected","statusTrace":"@allure.parent_suite(parent_suite)\n    @allure.tag(*tags)\n    @pytest.mark.slow\n    def test_via_stack_1x1_minsize_poly_to_met5():\n        # MAGIC GIVES (8.3 revision 540):\n        #_______________________________ NOTE: with halo=8µm __________________________________\n        # R0 li1.n3 poly 175.37       # poly contact, should be 152Ω\n        # R1 li1.n4 li1.n3 9.3005     # mcon via, should be 9.3Ω\n        # R2 li1.n3 li1 6.4005\n        # R3 li1.n4 li1.n2 4.5005     # via, should be 4.5Ω\n        # R7 met1 li1.n4 0.063\n        # R4 li1.n1 li1.n0 3.4105     # via2, should be 3.41Ω\n        # R8 li1.n2 met2 0.0545541\n        # R6 li1.n0 met5 0.3834       # via4, should be 0.38Ω\n        # R9 li1.n1 met3 0.0232879\n        # R10 li1.n0 met4 0.00687288\n        # R5 li1.n2 li1.n1 3.4105     # via3, should be 3.41Ω\n        # (and some redundant listings of the same)\n>       pex_whiteboxed.assert_expected_matches_obtained(\n            'test_patterns', 'r_via_stack_1x1_minsize_poly_to_met5.gds.gz',\n            expected_csv_content=\"\"\"Device;Net1;Net2;Capacitance [fF];Resistance [Ω]\n    R1;$0.17;$1.18;;152.0\n    R2;$0.17;poly;;0.0\n    R3;$1.18;$2.18;;0.0\n    R4;$1.18;li1;;0.0\n    R5;$10.40;$11.27;;0.38\n    R6;$10.40;$9.40;;0.0\n    R7;$11.27;met5;;0.0\n    R8;$2.18;$3.25;;9.3\n    R9;$3.25;$4.25;;0.0\n    R10;$3.25;met1;;0.0\n    R11;$4.25;$5.26;;4.5\n    R12;$5.26;$6.26;;0.0\n    R13;$5.26;met2;;0.0\n    R14;$6.26;$7.43;;3.41\n    R15;$7.43;$8.43;;0.0\n    R16;$7.43;met3;;0.0\n    R17;$8.43;$9.40;;3.41\n    R18;$9.40;met4;;0.0\"\"\"\n            )\n\ntests/rcx25/rcx25_R_sky130A_test.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = RCX25Extraction(pdk=PDKTestConfig(name=<PDKName.SKY130A: 'sky130A'>), pex_mode=<PEXMode.R: 'R'>, blackbox=False)\nexpected_csv_content = 'Device;Net1;Net2;Capacitance [fF];Resistance [Ω]\\nR1;$0.17;$1.18;;152.0\\nR2;$0.17;poly;;0.0\\nR3;$1.18;$2.18;;0.0\\nR4;...et2;;0.0\\nR14;$6.26;$7.43;;3.41\\nR15;$7.43;$8.43;;0.0\\nR16;$7.43;met3;;0.0\\nR17;$8.43;$9.40;;3.41\\nR18;$9.40;met4;;0.0'\npath_components = ('test_patterns', 'r_via_stack_1x1_minsize_poly_to_met5.gds.gz')\nresult = CellExtractionResults(cell_name='r_via_stack_1x1_minsize_poly_to_met5', overlap_table=defaultdict(<class 'list'>, {}),...3864805715872\n    node_a {\n      node_id: 93864805707440\n    }\n    node_b {\n      node_id: 93864805707888\n    }\n  }\n}\n)\ncsv = '/home/runner/work/klayout-pex/klayout-pex/output_sky130A/r_via_stack_1x1_minsize_poly_to_met5__r_via_stack_1x1_minsize_poly_to_met5/r_via_stack_1x1_minsize_poly_to_met5_k25d_pex_netlist.csv'\n\n    def assert_expected_matches_obtained(self,\n                                         *path_components,\n                                         expected_csv_content: str) -> CellExtractionResults:\n        result, csv, preview_png = self.run_rcx25d_single_cell(*path_components)\n        allure.attach.file(csv, name='pex_obtained.csv', attachment_type=allure.attachment_type.CSV)\n        allure.attach.file(preview_png, name='\uD83D\uDCF8 layout_preview.png', attachment_type=allure.attachment_type.PNG)\n        expected_csv = csv_diff.load_csv(io.StringIO(expected_csv_content), key='Device')\n        with open(csv, 'r') as f:\n            obtained_csv = csv_diff.load_csv(f, key='Device')\n            diff = csv_diff.compare(expected_csv, obtained_csv, show_unchanged=False)\n            human_diff = csv_diff.human_text(\n                diff, current=obtained_csv, extras=(('Net1','{Net1}'),('Net2','{Net2}'))\n            )\n            allure.attach(expected_csv_content, name='pex_expected.csv', attachment_type=allure.attachment_type.CSV)\n            allure.attach(json.dumps(diff, sort_keys=True, indent='    ').encode(\"utf8\"),\n                          name='pex_diff.json', attachment_type=allure.attachment_type.JSON)\n            allure.attach(human_diff.encode(\"utf8\"), name='‼️ pex_diff.txt', attachment_type=allure.attachment_type.TEXT)\n            # assert diff['added'] == []\n            # assert diff['removed'] == []\n            # assert diff['changed'] == []\n            # assert diff['columns_added'] == []\n            # assert diff['columns_removed'] == []\n>           assert human_diff == '', 'Diff detected'\n                   ^^^^^^^^^^^^^^^^\nE           AssertionError: Diff detected\n\ntests/rcx25/rcx25_test_helpers.py:145: AssertionError","steps":[],"attachments":[{"uid":"537f2d82fcc373e5","name":"pex_obtained.csv","source":"537f2d82fcc373e5.csv","type":"text/csv","size":420},{"uid":"7ce14a159894e9f1","name":"\uD83D\uDCF8 layout_preview.png","source":"7ce14a159894e9f1.png","type":"image/png","size":127348},{"uid":"63b5680e17533edb","name":"pex_expected.csv","source":"63b5680e17533edb.csv","type":"text/csv","size":419},{"uid":"bfdeba511531d4e","name":"pex_diff.json","source":"bfdeba511531d4e.json","type":"application/json","size":1730},{"uid":"c066aa026356f807","name":"‼️ pex_diff.txt","source":"c066aa026356f807.txt","type":"text/plain","size":692},{"uid":"22e8498774770f21","name":"log","source":"22e8498774770f21.txt","type":"text/plain","size":29746},{"uid":"953651e334f78595","name":"stdout","source":"953651e334f78595.txt","type":"text/plain","size":34967}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"2.5D"},{"name":"tag","value":"PEX"},{"name":"tag","value":"MAGIC"},{"name":"parentSuite","value":"kpex/2.5D Extraction Tests [PDK sky130A | mode R]"},{"name":"tag","value":"slow"},{"name":"suite","value":"rcx25_R_sky130A_test"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"3391-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.rcx25.rcx25_R_sky130A_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["PEX","slow","MAGIC","2.5D"]},"source":"ffce92e523e9f278.json","parameterValues":[]}