{"uid":"407cfc882288afaa","name":"test_nfet_li1_redux","fullName":"tests.rcx25.rcx25_R_sky130A_test#test_nfet_li1_redux","historyId":"12dd80e249301fbda98bf884aad1162c","time":{"start":1761829299475,"stop":1761829302212,"duration":2737},"status":"failed","statusMessage":"AssertionError: Diff detected","statusTrace":"@allure.parent_suite(parent_suite)\n    @allure.tag(*tags)\n    @pytest.mark.slow\n    def test_nfet_li1_redux():\n        # MAGIC GIVES (8.3 revision 540):\n        #_______________________________ NOTE: with halo=8µm __________________________________\n>       pex_whiteboxed.assert_expected_matches_obtained(\n            'test_patterns', 'nfet_li1_redux.gds.gz',\n            expected_csv_content=\"\"\"Device;Net1;Net2;Capacitance [fF];Resistance [Ω]\n    R1;$0.13;$1.18;;419.333\n    R2;$0.13;D;;0.0\n    R3;$0.13;S;;0.0\n    R4;$0.17;$1.18;;172.267\n    R5;$1.18;D;;47.059\n    R6;$1.18;G;;2.133\n    R7;$1.18;S;;68.894\"\"\"\n            )\n\ntests/rcx25/rcx25_R_sky130A_test.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = RCX25Extraction(pdk=PDKTestConfig(name=<PDKName.SKY130A: 'sky130A'>), pex_mode=<PEXMode.R: 'R'>, blackbox=False)\nexpected_csv_content = 'Device;Net1;Net2;Capacitance [fF];Resistance [Ω]\\nR1;$0.13;$1.18;;419.333\\nR2;$0.13;D;;0.0\\nR3;$0.13;S;;0.0\\nR4;$0.17;$1.18;;172.267\\nR5;$1.18;D;;47.059\\nR6;$1.18;G;;2.133\\nR7;$1.18;S;;68.894'\npath_components = ('test_patterns', 'nfet_li1_redux.gds.gz')\nresult = CellExtractionResults(cell_name='nfet_li1_redux', overlap_table=defaultdict(<class 'list'>, {}), sidewall_table=defaul... {\n      node_id: 93864766442480\n    }\n    resistance: 47.058823529411761\n  }\n}\nnetworks {\n  net_name: \"sky130_gnd\"\n}\n)\ncsv = '/home/runner/work/klayout-pex/klayout-pex/output_sky130A/nfet_li1_redux__nfet_li1_redux/nfet_li1_redux_k25d_pex_netlist.csv'\n\n    def assert_expected_matches_obtained(self,\n                                         *path_components,\n                                         expected_csv_content: str) -> CellExtractionResults:\n        result, csv, preview_png = self.run_rcx25d_single_cell(*path_components)\n        allure.attach.file(csv, name='pex_obtained.csv', attachment_type=allure.attachment_type.CSV)\n        allure.attach.file(preview_png, name='\uD83D\uDCF8 layout_preview.png', attachment_type=allure.attachment_type.PNG)\n        expected_csv = csv_diff.load_csv(io.StringIO(expected_csv_content), key='Device')\n        with open(csv, 'r') as f:\n            obtained_csv = csv_diff.load_csv(f, key='Device')\n            diff = csv_diff.compare(expected_csv, obtained_csv, show_unchanged=False)\n            human_diff = csv_diff.human_text(\n                diff, current=obtained_csv, extras=(('Net1','{Net1}'),('Net2','{Net2}'))\n            )\n            allure.attach(expected_csv_content, name='pex_expected.csv', attachment_type=allure.attachment_type.CSV)\n            allure.attach(json.dumps(diff, sort_keys=True, indent='    ').encode(\"utf8\"),\n                          name='pex_diff.json', attachment_type=allure.attachment_type.JSON)\n            allure.attach(human_diff.encode(\"utf8\"), name='‼️ pex_diff.txt', attachment_type=allure.attachment_type.TEXT)\n            # assert diff['added'] == []\n            # assert diff['removed'] == []\n            # assert diff['changed'] == []\n            # assert diff['columns_added'] == []\n            # assert diff['columns_removed'] == []\n>           assert human_diff == '', 'Diff detected'\n                   ^^^^^^^^^^^^^^^^\nE           AssertionError: Diff detected\n\ntests/rcx25/rcx25_test_helpers.py:145: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: Diff detected","statusTrace":"@allure.parent_suite(parent_suite)\n    @allure.tag(*tags)\n    @pytest.mark.slow\n    def test_nfet_li1_redux():\n        # MAGIC GIVES (8.3 revision 540):\n        #_______________________________ NOTE: with halo=8µm __________________________________\n>       pex_whiteboxed.assert_expected_matches_obtained(\n            'test_patterns', 'nfet_li1_redux.gds.gz',\n            expected_csv_content=\"\"\"Device;Net1;Net2;Capacitance [fF];Resistance [Ω]\n    R1;$0.13;$1.18;;419.333\n    R2;$0.13;D;;0.0\n    R3;$0.13;S;;0.0\n    R4;$0.17;$1.18;;172.267\n    R5;$1.18;D;;47.059\n    R6;$1.18;G;;2.133\n    R7;$1.18;S;;68.894\"\"\"\n            )\n\ntests/rcx25/rcx25_R_sky130A_test.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = RCX25Extraction(pdk=PDKTestConfig(name=<PDKName.SKY130A: 'sky130A'>), pex_mode=<PEXMode.R: 'R'>, blackbox=False)\nexpected_csv_content = 'Device;Net1;Net2;Capacitance [fF];Resistance [Ω]\\nR1;$0.13;$1.18;;419.333\\nR2;$0.13;D;;0.0\\nR3;$0.13;S;;0.0\\nR4;$0.17;$1.18;;172.267\\nR5;$1.18;D;;47.059\\nR6;$1.18;G;;2.133\\nR7;$1.18;S;;68.894'\npath_components = ('test_patterns', 'nfet_li1_redux.gds.gz')\nresult = CellExtractionResults(cell_name='nfet_li1_redux', overlap_table=defaultdict(<class 'list'>, {}), sidewall_table=defaul... {\n      node_id: 93864766442480\n    }\n    resistance: 47.058823529411761\n  }\n}\nnetworks {\n  net_name: \"sky130_gnd\"\n}\n)\ncsv = '/home/runner/work/klayout-pex/klayout-pex/output_sky130A/nfet_li1_redux__nfet_li1_redux/nfet_li1_redux_k25d_pex_netlist.csv'\n\n    def assert_expected_matches_obtained(self,\n                                         *path_components,\n                                         expected_csv_content: str) -> CellExtractionResults:\n        result, csv, preview_png = self.run_rcx25d_single_cell(*path_components)\n        allure.attach.file(csv, name='pex_obtained.csv', attachment_type=allure.attachment_type.CSV)\n        allure.attach.file(preview_png, name='\uD83D\uDCF8 layout_preview.png', attachment_type=allure.attachment_type.PNG)\n        expected_csv = csv_diff.load_csv(io.StringIO(expected_csv_content), key='Device')\n        with open(csv, 'r') as f:\n            obtained_csv = csv_diff.load_csv(f, key='Device')\n            diff = csv_diff.compare(expected_csv, obtained_csv, show_unchanged=False)\n            human_diff = csv_diff.human_text(\n                diff, current=obtained_csv, extras=(('Net1','{Net1}'),('Net2','{Net2}'))\n            )\n            allure.attach(expected_csv_content, name='pex_expected.csv', attachment_type=allure.attachment_type.CSV)\n            allure.attach(json.dumps(diff, sort_keys=True, indent='    ').encode(\"utf8\"),\n                          name='pex_diff.json', attachment_type=allure.attachment_type.JSON)\n            allure.attach(human_diff.encode(\"utf8\"), name='‼️ pex_diff.txt', attachment_type=allure.attachment_type.TEXT)\n            # assert diff['added'] == []\n            # assert diff['removed'] == []\n            # assert diff['changed'] == []\n            # assert diff['columns_added'] == []\n            # assert diff['columns_removed'] == []\n>           assert human_diff == '', 'Diff detected'\n                   ^^^^^^^^^^^^^^^^\nE           AssertionError: Diff detected\n\ntests/rcx25/rcx25_test_helpers.py:145: AssertionError","steps":[],"attachments":[{"uid":"6a240532b55395d2","name":"pex_obtained.csv","source":"6a240532b55395d2.csv","type":"text/csv","size":204},{"uid":"252ff32ddeae02ef","name":"\uD83D\uDCF8 layout_preview.png","source":"252ff32ddeae02ef.png","type":"image/png","size":66832},{"uid":"70ef1e503bb75d97","name":"pex_expected.csv","source":"70ef1e503bb75d97.csv","type":"text/csv","size":185},{"uid":"8f46588c5bf87d28","name":"pex_diff.json","source":"8f46588c5bf87d28.json","type":"application/json","size":1495},{"uid":"f47bbfc6c95f05d0","name":"‼️ pex_diff.txt","source":"f47bbfc6c95f05d0.txt","type":"text/plain","size":642},{"uid":"514459e2b2a4446","name":"log","source":"514459e2b2a4446.txt","type":"text/plain","size":27766},{"uid":"295a329082239fe0","name":"stdout","source":"295a329082239fe0.txt","type":"text/plain","size":32456}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"2.5D"},{"name":"tag","value":"PEX"},{"name":"tag","value":"MAGIC"},{"name":"parentSuite","value":"kpex/2.5D Extraction Tests [PDK sky130A | mode R]"},{"name":"tag","value":"slow"},{"name":"suite","value":"rcx25_R_sky130A_test"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"3391-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.rcx25.rcx25_R_sky130A_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["PEX","slow","MAGIC","2.5D"]},"source":"407cfc882288afaa.json","parameterValues":[]}