{"uid":"9bd8edec2dfcd76f","name":"test_sideoverlap_fingered_li1_m1_patternA","fullName":"tests.rcx25.rcx25_test#test_sideoverlap_fingered_li1_m1_patternA","historyId":"2f6f0edeeeb7061b7597ebc93264b8ab","time":{"start":1756804875256,"stop":1756804875547,"duration":291},"status":"broken","statusMessage":"RuntimeError: Unable to open file: /home/runner/work/klayout-pex/klayout-pex/output_sky130A/sideoverlap_fingered_li1_m1_patternA__sideoverlap_fingered_li1_m1_patternA//sideoverlap_fingered_li1_m1_patternA.lvsdb.gz (errno=2) in LayoutVsSchematic.read","statusTrace":"@allure.parent_suite(parent_suite)\n    @allure.tag(*tags)\n    @pytest.mark.slow\n    @pytest.mark.wip\n    def test_sideoverlap_fingered_li1_m1_patternA():\n        # MAGIC GIVES (8.3 revision 485): (sorting changed to match order)\n        # _______________________________ NOTE: with halo=50µm __________________________________\n        #\n        # C2 LOWER VSUBS 5.89976f\n        # C1 UPPER VSUBS 72.328f\n        # C0 LOWER UPPER 0.357768f\n    \n>       assert_expected_matches_obtained(\n            'test_patterns', 'sideoverlap_fingered_li1_m1_patternA.gds.gz',\n            expected_csv_content=\"\"\"Device;Net1;Net2;Capacitance [fF];Resistance [Ω]\n    C1;LOWER;UPPER;0.358;\n    C2;LOWER;VSUBS;5.9;\n    C3;UPPER;VSUBS;72.327;\"\"\"\n            )\n\ntests/rcx25/rcx25_test.py:443: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/rcx25/rcx25_test.py:108: in assert_expected_matches_obtained\n    result, csv, preview_png = _run_rcx25d_single_cell(*path_components)\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/rcx25/rcx25_test.py:92: in _run_rcx25d_single_cell\n    cli.main(['main',\nklayout_pex/kpex_cli.py:869: in main\n    lvsdb = self.create_lvsdb(args)\n            ^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <klayout_pex.kpex_cli.KpexCLI object at 0x7f56c99b8fe0>\nargs = Namespace(log_level=<LogLevel.SUBPROCESS: 12>, num_threads=16, pdk=<PDK.SKY130A: 'sky130A'>, output_dir_base_path='/ho...ered_li1_m1_patternA__sideoverlap_fingered_li1_m1_patternA/sideoverlap_fingered_li1_m1_patternA_dummy_schematic.spice')\n\n    def create_lvsdb(self, args: argparse.Namespace) -> kdb.LayoutVsSchematic:\n        lvsdb = kdb.LayoutVsSchematic()\n    \n        match args.input_mode:\n            case InputMode.LVSDB:\n                lvsdb.read(args.lvsdb_path)\n            case InputMode.GDS:\n                lvs_log_path = os.path.join(args.output_dir_path, f\"{args.effective_cell_name}_lvs.log\")\n                lvsdb_path = os.path.join(args.output_dir_path, f\"{args.effective_cell_name}.lvsdb.gz\")\n                lvsdb_cache_path = os.path.join(args.cache_dir_path, args.pdk,\n                                                os.path.splitroot(os.path.abspath(args.gds_path))[-1],\n                                                f\"{args.effective_cell_name}.lvsdb.gz\")\n    \n                lvs_needed = True\n    \n                if args.cache_lvs:\n                    if not os.path.exists(lvsdb_cache_path):\n                        info(f\"Cache miss: extracted LVSDB does not exist\")\n                        subproc(lvsdb_cache_path)\n                    elif self.modification_date(lvsdb_cache_path) <= self.modification_date(args.gds_path):\n                        info(f\"Cache miss: extracted LVSDB is older than the input GDS\")\n                        subproc(lvsdb_cache_path)\n                    else:\n                        warning(f\"Cache hit: Reusing cached LVSDB\")\n                        subproc(lvsdb_cache_path)\n                        lvs_needed = False\n    \n                if lvs_needed:\n                    lvs_runner = LVSRunner()\n                    lvs_runner.run_klayout_lvs(exe_path=args.klayout_exe_path,\n                                               lvs_script=args.lvs_script_path,\n                                               gds_path=args.effective_gds_path,\n                                               schematic_path=args.effective_schematic_path,\n                                               log_path=lvs_log_path,\n                                               lvsdb_path=lvsdb_path,\n                                               verbose=args.klayout_lvs_verbose)\n                    if args.cache_lvs:\n                        cache_dir_path = os.path.dirname(lvsdb_cache_path)\n                        if not os.path.exists(cache_dir_path):\n                            os.makedirs(cache_dir_path, exist_ok=True)\n                        shutil.copy(lvsdb_path, lvsdb_cache_path)\n    \n>               lvsdb.read(lvsdb_path)\nE               RuntimeError: Unable to open file: /home/runner/work/klayout-pex/klayout-pex/output_sky130A/sideoverlap_fingered_li1_m1_patternA__sideoverlap_fingered_li1_m1_patternA//sideoverlap_fingered_li1_m1_patternA.lvsdb.gz (errno=2) in LayoutVsSchematic.read\n\nklayout_pex/kpex_cli.py:837: RuntimeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"RuntimeError: Unable to open file: /home/runner/work/klayout-pex/klayout-pex/output_sky130A/sideoverlap_fingered_li1_m1_patternA__sideoverlap_fingered_li1_m1_patternA//sideoverlap_fingered_li1_m1_patternA.lvsdb.gz (errno=2) in LayoutVsSchematic.read","statusTrace":"@allure.parent_suite(parent_suite)\n    @allure.tag(*tags)\n    @pytest.mark.slow\n    @pytest.mark.wip\n    def test_sideoverlap_fingered_li1_m1_patternA():\n        # MAGIC GIVES (8.3 revision 485): (sorting changed to match order)\n        # _______________________________ NOTE: with halo=50µm __________________________________\n        #\n        # C2 LOWER VSUBS 5.89976f\n        # C1 UPPER VSUBS 72.328f\n        # C0 LOWER UPPER 0.357768f\n    \n>       assert_expected_matches_obtained(\n            'test_patterns', 'sideoverlap_fingered_li1_m1_patternA.gds.gz',\n            expected_csv_content=\"\"\"Device;Net1;Net2;Capacitance [fF];Resistance [Ω]\n    C1;LOWER;UPPER;0.358;\n    C2;LOWER;VSUBS;5.9;\n    C3;UPPER;VSUBS;72.327;\"\"\"\n            )\n\ntests/rcx25/rcx25_test.py:443: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/rcx25/rcx25_test.py:108: in assert_expected_matches_obtained\n    result, csv, preview_png = _run_rcx25d_single_cell(*path_components)\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests/rcx25/rcx25_test.py:92: in _run_rcx25d_single_cell\n    cli.main(['main',\nklayout_pex/kpex_cli.py:869: in main\n    lvsdb = self.create_lvsdb(args)\n            ^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <klayout_pex.kpex_cli.KpexCLI object at 0x7f56c99b8fe0>\nargs = Namespace(log_level=<LogLevel.SUBPROCESS: 12>, num_threads=16, pdk=<PDK.SKY130A: 'sky130A'>, output_dir_base_path='/ho...ered_li1_m1_patternA__sideoverlap_fingered_li1_m1_patternA/sideoverlap_fingered_li1_m1_patternA_dummy_schematic.spice')\n\n    def create_lvsdb(self, args: argparse.Namespace) -> kdb.LayoutVsSchematic:\n        lvsdb = kdb.LayoutVsSchematic()\n    \n        match args.input_mode:\n            case InputMode.LVSDB:\n                lvsdb.read(args.lvsdb_path)\n            case InputMode.GDS:\n                lvs_log_path = os.path.join(args.output_dir_path, f\"{args.effective_cell_name}_lvs.log\")\n                lvsdb_path = os.path.join(args.output_dir_path, f\"{args.effective_cell_name}.lvsdb.gz\")\n                lvsdb_cache_path = os.path.join(args.cache_dir_path, args.pdk,\n                                                os.path.splitroot(os.path.abspath(args.gds_path))[-1],\n                                                f\"{args.effective_cell_name}.lvsdb.gz\")\n    \n                lvs_needed = True\n    \n                if args.cache_lvs:\n                    if not os.path.exists(lvsdb_cache_path):\n                        info(f\"Cache miss: extracted LVSDB does not exist\")\n                        subproc(lvsdb_cache_path)\n                    elif self.modification_date(lvsdb_cache_path) <= self.modification_date(args.gds_path):\n                        info(f\"Cache miss: extracted LVSDB is older than the input GDS\")\n                        subproc(lvsdb_cache_path)\n                    else:\n                        warning(f\"Cache hit: Reusing cached LVSDB\")\n                        subproc(lvsdb_cache_path)\n                        lvs_needed = False\n    \n                if lvs_needed:\n                    lvs_runner = LVSRunner()\n                    lvs_runner.run_klayout_lvs(exe_path=args.klayout_exe_path,\n                                               lvs_script=args.lvs_script_path,\n                                               gds_path=args.effective_gds_path,\n                                               schematic_path=args.effective_schematic_path,\n                                               log_path=lvs_log_path,\n                                               lvsdb_path=lvsdb_path,\n                                               verbose=args.klayout_lvs_verbose)\n                    if args.cache_lvs:\n                        cache_dir_path = os.path.dirname(lvsdb_cache_path)\n                        if not os.path.exists(cache_dir_path):\n                            os.makedirs(cache_dir_path, exist_ok=True)\n                        shutil.copy(lvsdb_path, lvsdb_cache_path)\n    \n>               lvsdb.read(lvsdb_path)\nE               RuntimeError: Unable to open file: /home/runner/work/klayout-pex/klayout-pex/output_sky130A/sideoverlap_fingered_li1_m1_patternA__sideoverlap_fingered_li1_m1_patternA//sideoverlap_fingered_li1_m1_patternA.lvsdb.gz (errno=2) in LayoutVsSchematic.read\n\nklayout_pex/kpex_cli.py:837: RuntimeError","steps":[],"attachments":[{"uid":"ce83f794e9134713","name":"log","source":"ce83f794e9134713.txt","type":"text/plain","size":843},{"uid":"876c8a69306e9be9","name":"stdout","source":"876c8a69306e9be9.txt","type":"text/plain","size":1589}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"2.5D"},{"name":"parentSuite","value":"kpex/2.5D Extraction Tests"},{"name":"tag","value":"MAGIC"},{"name":"tag","value":"PEX"},{"name":"tag","value":"wip"},{"name":"tag","value":"slow"},{"name":"suite","value":"rcx25_test"},{"name":"host","value":"pkrvmccyg1gnepe"},{"name":"thread","value":"3401-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.rcx25.rcx25_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["PEX","slow","MAGIC","2.5D","wip"]},"source":"9bd8edec2dfcd76f.json","parameterValues":[]}